


NOTE




fix---- edit product ------

session_start();
  if (!isset($_SESSION['session_id'])) {
    $_SESSION['session_id'] = uniqid();
  }
  

<script>
  window.onload = function() {
    
    var userId = '<?php echo $_SESSION['session_id'];?>';
    var cart = JSON.parse(localStorage.getItem('cart-' + userId) || '{}');
    var count = 0;
    for (var key in cart) {
      count += cart[key][0];
    }
    document.getElementById('cartCount').textContent = count;
  };


  function saveCart(cart) {
    var userId = getUserId();
    localStorage.setItem('cart-' + userId, JSON.stringify(cart));
  }

    function addToCart(productName, productPrice) {

    var userId = '<?php echo $_SESSION['session_id'];?>';

    var product = {
      name: productName,
      price: productPrice,
      quantity: 1
    };
    var cart = JSON.parse(localStorage.getItem('cart-' + userId) || '{}');
    if (cart[productName]) {
      // If the product already exists in the cart, update the quantity
      cart[productName][0]++;
      alert(productName + " quantity updated to " + cart[productName][0]);
    } else {
      // Otherwise, add a new entry for the product
      cart[productName] = [1, product];
      alert(productName + " added to cart.");
    }
    localStorage.setItem('cart-' + userId, JSON.stringify(cart));

    // Update the badge count
    var count = parseInt(document.getElementById('cartCount').textContent);
    document.getElementById('cartCount').textContent = count + 1;

  }
</script>

<script>

    var userId = '<?php echo $_SESSION['session_id'];?>';
    // retrieve cart from localStorage
    var cart = JSON.parse(localStorage.getItem('cart-' + userId) || '{}');

    // display the number of items in cart
    document.getElementById('cart-count').textContent = Object.keys(cart).length;

    // loop through each item in cart and display in HTML
    var cartItemsHtml = '';
    var cartTotal = 0;
    for (var productName in cart) {
        if (cart.hasOwnProperty(productName)) {
            var productQuantity = cart[productName][0];
            var product = cart[productName][1];
            var productPrice = product.price.toLocaleString('en-PH', { style: 'currency', currency: 'PHP' });
            var productTotal = (product.price * productQuantity).toLocaleString('en-PH', { style: 'currency', currency: 'PHP' });
            cartItemsHtml += '<li class="list-group-item d-flex justify-content-between lh-condensed">' +
                '<div>' +
                '<h6 class="my-0">' + product.name + '</h6>' +
                '<small class="text-muted">'+ productPrice + ' x ' + productQuantity + '</small>'+
                '</div>' +
                '<i class="fa-solid fa-square-minus" style="color: #fa0000;" onclick="removeFromCart(\'' + productName + '\')"></i>' +
                '</li>';
            cartTotal += product.price * productQuantity;
        }
    }

    document.getElementById('cart-items').innerHTML = cartItemsHtml;

    // display the cart total
    document.getElementById('cart-total').textContent = new Intl.NumberFormat('en-PH', { style: 'currency', currency: 'PHP' }).format(cartTotal.toFixed(2));

    // function to remove item from cart
    function removeFromCart(productName) {
        delete cart[productName];
        localStorage.setItem('cart-' + userId, JSON.stringify(cart));
        window.location.reload();
    }

</script>

onclick="addToCart('<?php echo $rows['productname']; ?>', <?php echo $rows['productprice']; ?>)"

onclick="addToCart('<?php echo $firstRow['productname']; ?>', <?php echo $firstRow['productprice']; ?>)"






// $current_user_id = $_SESSION['userid'];

// Check if the add to cart form is submitted
if(isset($_POST['addtocart'])){
  
  if (isset($_SESSION['cart'])) {
    
    $item_array_id = array_column($_SESSION['cart'],"productid");

    if (in_array($_POST['productid'], $item_array_id)) {
      
      echo "<script>alert('Product is already added in the cart')</script>";
      echo "<script>window.location='index.php'</script>";
    }else{
      $count = count($_SESSION['cart']);
      $item_array = array(
        'productid' => $_POST['productid']
      );
      $_SESSION['cart'][$count] = $item_array;
      echo "<script>alert('Product added to cart.')</script>";
      echo "<script>window.location='index.php'</script>";
    }

  }else {
    
    $item_array = array('productid' => $_POST['productid']);
    $_SESSION['cart'][0] = $item_array;
  }

  


}


















include('includes/connection.php');

          $datetoday = date('Y-m-d');
      
          $qcart = "SELECT product_tbl.price, cart_tbl.quantity
                    FROM cart_tbl
                    INNER JOIN product_tbl ON cart_tbl.product_id = product_tbl.id
                    WHERE cart_tbl.user_id = ?";
          $stmt = $mysqli->prepare($qcart);
          $stmt->bind_param("i", $user_id);
          $stmt->execute();
      
          $quantities = array();
          $prices = array();
          $total_price = 0;
      
          $stmt->bind_result($price, $quantity);
          while ($stmt->fetch()) {
              $quantities[] = $quantity;
              $prices[] = $price;
          }
      
          $stmt->close();
      
          // Calculate the total price
          for ($i = 0; $i < count($quantities); $i++) {
              $total_price += $quantities[$i] * $prices[$i];
          }
      
          $qcheckout = "INSERT INTO order_tbl (userid, cartid, firstname, lastname, email, address1, address2, zip, orderdate, billinginfo,
                           cardname, cardnum, quantity, totalprice) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
      
          $statement = $conn->prepare($qcheckout);
          $statement->bind_param("ssssssssssssss", 
              $user_id,
              $_POST['cartid'],  
              $_POST['firstname'],
              $_POST['lastname'],
              $_POST['email'],
              $_POST['address1'],
              $_POST['address2'],
              $_POST['zip'],
              $datetoday,
              $_POST['paymentMethod'],
              $_POST['cc-name'],
              $_POST['cc-number'],
              array_sum($quantities), // total quantity of all products
              $total_price // total price of all products
          );

          unset($_POST['checkout']);

      }else {

        
		$_SESSION['token'] = bin2hex(random_bytes(32));

        ?>

          <div class="col-md-8 order-md-1">
          <h4 class="mb-3">Billing address</h4>
          <form class="needs-validation" novalidate method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>">
          
						<input type="hidden" value="<?php echo $_SESSION['token'] = bin2hex(random_bytes(32)); ?>" name="token">
            <div class="row">
              <div class="col-md-6 mb-3">
                <label for="firstName">First name</label>
                <input type="text" class="form-control" id="firstName" name="firstName" placeholder="" value="" required>
                <div class="invalid-feedback">
                  Valid first name is required.
                </div>
              </div>
              <div class="col-md-6 mb-3">
                <label for="lastName">Last name</label>
                <input type="text" class="form-control" id="lastName" name="lastName" placeholder="" value="" required>
                <div class="invalid-feedback">
                  Valid last name is required.
                </div>
              </div>
            </div>

            <div class="mb-3">
              <label for="email">Email</label>
              <input type="email" class="form-control" id="email" name="email" placeholder="you@example.com">
              <div class="invalid-feedback">
                Please enter a valid email address for shipping updates.
              </div>
            </div>
            <div class="row">
            
            <div class="col-md-6 mb-3">
                <label for="address">Address</label>
                    <input type="text" class="form-control" id="address1" name="address1" placeholder="1234 Main St" required>
                        <div class="invalid-feedback">
                                    Please enter your shipping address.
                        </div>
            </div>

            <div class="col-md-6 mb-3">
                <label for="zip">Zip</label>
                    <input type="text" class="form-control" id="zip" name="zip" placeholder="" required>
                        <div class="invalid-feedback">
                        Zip code required.
                        </div>
                </div>
            </div>
            

            <div class="mb-3">
                <label for="address2">Address 2 <span class="text-muted">(Optional)</span></label>
                <input type="text" class="form-control" id="address2" name="address2" placeholder="Apartment or suite">
            </div>

            <hr class="mb-4">

            <h4 class="mb-3">Payment</h4>

            <div class="d-block my-3">
                <div class="custom-control custom-radio">
                    <input id="credit" name="paymentMethod" type="radio" class="custom-control-input" checked required>
                    <label class="custom-control-label" for="credit">Credit card</label>
                </div>
                <div class="custom-control custom-radio">
                    <input id="debit" name="paymentMethod" type="radio" class="custom-control-input" required>
                    <label class="custom-control-label" for="debit">Debit card</label>
                </div>
                <div class="custom-control custom-radio">
                    <input id="paypal" name="paymentMethod" type="radio" class="custom-control-input" required>
                    <label class="custom-control-label" for="paypal">Paypal</label>
                </div>
                <div class="custom-control custom-radio">
                    <input id="COD" name="paymentMethod" type="radio" class="custom-control-input" required>
                    <label class="custom-control-label" for="paypal">Cash on Delivery</label>
                </div>
                </div>

                <div id="creditCardForm">
                <div class="row">
                    <div class="col-md-6 mb-3">
                    <label for="cc-name">Name on card</label>
                    <input type="text" class="form-control" id="cc-name" name="cc-name" placeholder="" required>
                    <small class="text-muted">Full name as displayed on card</small>
                    <div class="invalid-feedback">
                        Name on card is required
                    </div>
                    </div>
                    <div class="col-md-6 mb-3">
                    <label for="cc-number">Credit card number</label>
                    <input type="text" class="form-control" id="cc-number" name="cc-number" placeholder="" required>
                    <div class="invalid-feedback">
                        Credit card number is required
                    </div>
                    </div>
                </div>
                </div>

                <hr class="mb-4">

                <button class="btn btn-primary btn-lg btn-block" type="submit" name="checkout">Continue to checkout</button>
                <button class="btn btn-danger btn-lg btn-block"><a href="index.php">Cancel</a></button>

                <script>
                const creditCardForm = document.getElementById("creditCardForm");
                const radioButtons = document.querySelectorAll('input[type="radio"][name="paymentMethod"]');
                
                radioButtons.forEach((radioButton) => {
                    radioButton.addEventListener("change", () => {
                    if (radioButton.id === "COD") {
                        creditCardForm.style.display = "none";
                    } else {
                        creditCardForm.style.display = "block";
                    }
                    });
                });
                </script>

                <hr class="mb-4"> 
                
      <footer class="my-5 pt-5 text-muted text-center text-small" style="position:relative;left:25%;">
        <p class="mb-1">&copy; Pingpong Buffet</p>
        <ul class="list-inline">
          <li class="list-inline-item"><a href="#">Privacy</a></li>
          <li class="list-inline-item"><a href="#">Terms</a></li>
          <li class="list-inline-item"><a href="#">Support</a></li>
        </ul>
      </footer>
          </form>
        </div>
        <?php
      }
      
        ?>


        $qcheckout = "INSERT INTO order_tbl (userid, firstname, lastname, email, address1, address2, zip, orderdate, billinginfo,
                                  cardname, cardnum, quantity, totalprice) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)";

              $statement = $conn->prepare($qcheckout);
              $statement->bind_param("issssssssssds",
                  $user_id,
                  $_POST['firstname'],
                  $_POST['lastname'],
                  $_POST['email'],
                  $_POST['address1'],
                  $_POST['address2'],
                  $_POST['zip'],
                  $datetoday,
                  $_POST['paymentMethod'],
                  $_POST['cc-name'],
                  $encrypt,
                  $quantities, // total quantity of all products
                  $total_price // total price of all products
              );